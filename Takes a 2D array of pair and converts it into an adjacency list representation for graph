 Takes a 2D array of pair and converts it into an adjacency list representation for graph.

#include <iostream>
#include <vector>
using namespace std;
int main() {
    int pairs[][2] = {{0, 1}, {0, 2}, {1, 2}, {2, 3}};
    int numEdges = sizeof(pairs) / sizeof(pairs[0]);
    int maxNode = 0;
    for (int i = 0; i < numEdges; i++) {
        maxNode = max(maxNode, max(pairs[i][0], pairs[i][1]));
    }
    vector<vector<int>> adjList(maxNode + 1);
    for (int i = 0; i < numEdges; i++) {
        int u = pairs[i][0];
        int v = pairs[i][1];
        adjList[u].push_back(v);
        adjList[v].push_back(u);
    }
    for (int i = 0; i <= maxNode; i++) {
        cout << i << ": ";
        for (int neighbor : adjList[i]) {
            cout << neighbor << " ";
        }
        cout << endl;
    }
    return 0;
}

