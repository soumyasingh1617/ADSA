BFS (Breadth-First Search) of a graph.

#include<iostream>
#include<vector>
#include<queue>
using namespace std;
vector<int> bfsOfGraph(int V, vector<int> adj[]) {
    vector<int> bfs;
    vector<bool> visited(V, false);
    queue<int> q;
    visited[0]=true;
    q.push(0);
    while(!q.empty()) {
        int node=q.front(); q.pop();
        bfs.push_back(node);
        for(int it:adj[node]) {
            if(!visited[it]) {
                visited[it]=true;
                q.push(it);
            }
        }
    }
    return bfs;
}
int main() {
    int V=5;
    vector<int> adj[V];
    adj[0].push_back(1);
    adj[0].push_back(2);
    adj[1].push_back(0);
    adj[1].push_back(3);
    adj[2].push_back(0);
    adj[2].push_back(4);
    adj[3].push_back(1);
    adj[4].push_back(2);
    vector<int> res=bfsOfGraph(V,adj);
    for(int x:res) cout<<x<<" ";
    return 0;
}
